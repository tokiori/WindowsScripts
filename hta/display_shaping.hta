<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="X-UA-Compatible" content="IE=9" />
        <meta charset="utf-8" />
        <title>JSON整形</title>
        <HTA:APPLICATION ID="thishta" />
        <script src="../wsf.js"></script>
        <script>
            var shaping = function (input, output) {
                var $i = document.querySelector(input);
                setValue(output, js.json.sharping($i.value));
            };
            var getFilterCondition = function () {
                var $l = document.querySelector("#looseMatcher");
                var condition = {};
                condition.looseMatcher = $l.checked;
                var $p = document.querySelector("input[name=matchPattern]:checked");
                condition.matchPattern = $p.value;
                return condition;
            };
            var filter = function (input, output, filter) {
                var $i = document.querySelector(input);
                var $f = document.querySelector(filter);
                setValue(output, js.json.filter($i.value, $f.value, getFilterCondition()));
            };
            var getGridSample = function () {
                var getGrid = function (key, description, type, sample) {
                    return [key, description, type, sample].join("\t");
                };
                var sampleType = [
                    getGrid("stringkey", "stringname", "string", "this is string"),
                    getGrid("numberkey", "numbername", "number", 123)
                ];
                return sampleType.join("\r\n");
            };
            var getJsonSample = function () {
                var sampleType = {
                    dateval: Date.now(),
                    strval: "string",
                    numval: 123,
                    floatval: 123.4567,
                    nullval: null,
                    undefinedval: undefined,
                    arrval: [1, 2, 3]
                };
                var nestObj = {
                    objkey_1_1: "objval_1_1",
                    objkey_1_2: "objval_1_2",
                    objnest_1_1: {
                        objkey_2_1: "objval_2_1",
                        objnest_2_1: {
                            objkey_3_1: "objval_3_1"
                        }
                    }
                };
                var nestArr = [
                    "arrnest1_1",
                    "arrnest1_2",
                    ["arrnest2_1", "arrnest2_2", "arrnest2_3", ["arrnest3_1", ["arrnest4_a"]]],
                    { arrinobj1: "duplicateval_1" },
                    { arrinobj2: "duplicateval_2" },
                    { arrinobj1: "duplicateval_1" },
                    { arrinobj2: "duplicateval_2" },
                    { arrinobj1: "duplicateval_a" },
                    { arrinobj2: "duplicateval_b" },
                    { arrinobj3: "duplicateval_3" },
                    { arrinobj3: "duplicateval_3" }
                ];
                var sampleValue = {
                    colon: "[:,;]",
                    brank: "[ ,　]",
                    tab: "[\t,	]",
                    sq: "[','']",
                    dq: '[",""]'
                };
                var dummyObjStr = JSON.stringify([sampleValue]);
                var sampleEscape = [
                    "[<]:&lt;",
                    "[>]:&gt;",
                    "[']:&#39;",
                    '["]:&quot;',
                    "[&]:&amp;",
                    "[ ]:&nbsp;",
                    "[¥]:&yen;",
                    "[©]:&copy;",
                    "[®]:&reg;"
                ];
                var testJson = {
                    description: "json string sample.",
                    sampleType: sampleType,
                    sampleValue: sampleValue,
                    nestObj: nestObj,
                    nestArr: nestArr,
                    dummyObjStr: dummyObjStr,
                    sampleEscape: sampleEscape
                };
                return JSON.stringify(testJson);
            };
            var setValue = function (selector, value) {
                var $elem = document.querySelector(selector);
                if ($elem.value != undefined) {
                    $elem.value = value;
                } else {
                    $elem.innerHTML = value;
                }
            };
            var getValue = function (selector) {
                var $elem = document.querySelector(selector);
                if ($elem.value != undefined) {
                    return $elem.value;
                } else {
                    return $elem.innerHTML;
                }
            };
            var setSampleJson = function (selector) {
                setValue(selector, getJsonSample());
            };
            var setSampleGrid = function (selector) {
                setValue(selector, getGridSample());
            };
            var clear = function (selector) {
                setValue(selector, "");
            };
            var copy = function (selector) {
                toclipboard(getValue(selector));
            };
            var toclipboard = function (text) {
                var choise;
                var res;

                if (navigator.userAgent.match(/ipad|iphone/i)) {
                    choise = "navigator.userAgent.match(/ipad|iphone/i)";
                    var range = document.createRange();
                    range.selectNodeContents(ta);
                    var sel = window.getSelection();
                    sel.removeAllRanges();
                    sel.addRange(range);
                    res = document.execCommand("copy");
                } else if (window.clipboardData) {
                    choise = "window.clipboardData";
                    res = window.clipboardData.setData("Text", text);
                } else if (navigator.clipboard) {
                    choise = "navigator.clipboard";
                    res = navigator.clipboard.writeText(text);
                } else {
                    choise = "ta.select()";
                    var ta = document.createElement("textarea");
                    ta.value = text;
                    ta.setAttribute("readonly", "readonly");
                    ta.setAttribute("contenteditable", true);
                    ta.style.top = "0";
                    ta.style.left = "0";
                    ta.style.position = "fixed";
                    try {
                        document.body.appendChild(ta);
                        ta.focus();
                        ta.select();
                        res = document.execCommand("copy");
                    } finally {
                        document.body.removeChild(ta);
                    }
                }
                if (!!!res) {
                    window.prompt("Copy to clipboard: Ctrl+C, Enter", text);
                }
                // js.echo(js.str.format("toclipboard:${0}, text:${1}, case:${2}", res, text, choise));
                return res;
            };
        </script>
        <style>
            h2 {
                font-size: 1em;
                padding: 0;
                margin: 0.5em 0 0.1em 0;
                line-height: 1.5em;
            }
            input[type="button"] {
                vertical-align: top;
                margin: 0 2px;
                border: none;
                border-radius: 10px;
                padding: 0.2em 0.5em;
                background-color: darkcyan;
                color: white;
                cursor: pointer;
            }
            textarea {
                width: 100%;
            }
            #fRegex {
                margin-left: 2em;
                border: 1px solid #999999;
                padding: 5px;
                width: 20em;
            }
            pre {
                border: 1px solid gray;
                width: 100%;
                overflow-x: auto;
            }
        </style>
    </head>
    <body>
        <div id="contents_area">
            <h2>
                処理前
                <input type="button" value="クリア" onClick="clear('#iData')" />
                <input type="button" value="JSONサンプル" onClick="setSampleJson('#iData')" />
                <!-- <input type="button" value="GRIDサンプル" onClick="setSampleGrid('#iData')" /> -->
            </h2>
            <textarea id="iData" style="margin-bottom: 1em; height: 10em"></textarea><br />
            <input type="button" value="JSON整形" onClick="shaping('#iData', '#oData')" />
            <input id="fRegex" type="text" value="val.*\d" />
            <input type="button" value="正規表現フィルタ" onClick="filter('#iData', '#oData', '#fRegex')" />
            <input type="checkbox" id="looseMatcher" checked />
            <label for="looseMatcher">囲み文字とインデントを無視</label>
            <span style="margin-left: 2em;">検索対象：</span>
            <input type="radio" name="matchPattern" id="keyOrValue" value="keyOrValue" checked />
            <label for="keyOrValue">すべて</label>
            <input type="radio" name="matchPattern" id="keyOnly" value="keyOnly" />
            <label for="keyOnly">KEYのみ</label>
            <input type="radio" name="matchPattern" id="valueOnly" value="valueOnly" />
            <label for="valueOnly">VALUEのみ</label>
            <h2>
                処理後
                <input type="button" value="クリア" onClick="clear('#oData')" />
                <input type="button" value="コピー" onClick="copy('#oData')" />
            </h2>
            <textarea id="oData" style="height: 30em"></textarea><br />
            <!-- <pre id="oData" style="height: 30em"></pre> -->
            <br />
        </div>
    </body>
</html>
